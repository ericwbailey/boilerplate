// BUTTONS


// BUTTON LOGIC
@mixin buttons-border() {
    border: 0;
    border-radius: $global-border-radius;
}


@mixin buttons-color() {
    background-color: c(button, base);

    color: c(button, type);
}


@mixin button-states() {
    &:hover {
        background-color: c(button, hover);
    }

    &:active {
        background-color: c(button, active);
    }

    &:focus {
        background-color: c(button, focus);
    }
}


@mixin buttons-height() {
    height: ms(2, em);

    line-height: 1;
}


@mixin buttons-width() {
    display: block;
    width: 100%;
}


// GROUPED STYLES
button,
input[type="button"] {
    @include buttons-border();
    @include buttons-color();
    @include button-states();
    @include buttons-height();
    @include buttons-width();

    // Primary actions
    &[data-button-priority="primary"] {

    }

    // Secondary actions
    &[data-button-priority="secondary"] {

    }

    // Tertiary actions
    &[data-button-priority="tertiary"] {

    }

    // Busy and Disabled
    &[aria-busy="true"],
    &[disabled] {
        opacity: 0.5;

        &:hover,
        &:active,
        &:focus {
            background-color: c(button, base);
        }
    }

    // Busy
    &[aria-busy="true"] {

    }

    // Disabled
    &[disabled] {

    }
}


// INDIVIDUAL STYLES
button {

}


input[type="button"] {

}


// TEXT BUTTONS
[role="button"][tabindex="0"] {
    @include buttons-height();
    @include buttons-width();
    @include content-show-interaction(input);

    align-items: center;
    display: flex;
    justify-content: center;

    color: c(button, base);

    &:hover {
        color: c(button, hover);
    }

    &:focus {
        color: c(button, focus);
    }

    &:active {
        color: c(button, active);
    }
}
